// <auto-generated />
using System;
using AvansFysioAppInfrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AvansFysioAppInfrastructure.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20211029162337_addMainDatabase")]
    partial class addMainDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AvansFysioAppDomain.Domain.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AppointmentBegin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("AppointmentEnd")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HeadPhysiotherapistId")
                        .HasColumnType("int");

                    b.Property<int?>("PatientId")
                        .HasColumnType("int");

                    b.Property<int?>("SessionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HeadPhysiotherapistId");

                    b.HasIndex("PatientId");

                    b.HasIndex("SessionId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("AvansFysioAppDomain.Domain.Operation", b =>
                {
                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MandatoryExplanation")
                        .HasColumnType("bit");

                    b.HasKey("Value");

                    b.ToTable("Operation");
                });

            modelBuilder.Entity("AvansFysioAppDomain.Domain.Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Birthday")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Occupation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OccupationId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PatientId");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("AvansFysioAppDomain.Domain.PatientFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfRegister")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionComplaintsGlobal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiagnosisNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HeadPractitionerId")
                        .HasColumnType("int");

                    b.Property<int?>("IntakeById")
                        .HasColumnType("int");

                    b.Property<int?>("PatientId")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SupervisionById")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TreatmentPlanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HeadPractitionerId");

                    b.HasIndex("IntakeById");

                    b.HasIndex("PatientId");

                    b.HasIndex("SupervisionById");

                    b.HasIndex("TreatmentPlanId");

                    b.ToTable("PatientFiles");
                });

            modelBuilder.Entity("AvansFysioAppDomain.Domain.Physiotherapist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BigId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Physiotherapists");

                    b.HasData(
                        new
                        {
                            Id = 99,
                            BigId = 123,
                            Email = "abc@abc.com",
                            EmployeeId = 123,
                            Name = "Diren Physio",
                            Phone = "0612345678"
                        },
                        new
                        {
                            Id = 100,
                            BigId = 321,
                            Email = "def@def.com",
                            EmployeeId = 321,
                            Name = "Justin Physio",
                            Phone = "0687654321"
                        });
                });

            modelBuilder.Entity("AvansFysioAppDomain.Domain.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int?>("HeadPhysiotherapistId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PatientId")
                        .HasColumnType("int");

                    b.Property<int?>("TreatmentPlanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HeadPhysiotherapistId");

                    b.HasIndex("PatientId");

                    b.HasIndex("TreatmentPlanId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("AvansFysioAppDomain.Domain.Treatment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfTreatment")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientFileId")
                        .HasColumnType("int");

                    b.Property<int?>("PhysiotherapistId")
                        .HasColumnType("int");

                    b.Property<string>("Room")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PatientFileId");

                    b.HasIndex("PhysiotherapistId");

                    b.HasIndex("TypeId");

                    b.ToTable("Treatments");
                });

            modelBuilder.Entity("AvansFysioAppDomain.Domain.TreatmentPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MaxSessions")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TreatmentPlans");
                });

            modelBuilder.Entity("AvansFysioAppDomain.Domain.Appointment", b =>
                {
                    b.HasOne("AvansFysioAppDomain.Domain.Physiotherapist", "HeadPhysiotherapist")
                        .WithMany()
                        .HasForeignKey("HeadPhysiotherapistId");

                    b.HasOne("AvansFysioAppDomain.Domain.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId");

                    b.HasOne("AvansFysioAppDomain.Domain.Session", "Session")
                        .WithMany()
                        .HasForeignKey("SessionId");

                    b.Navigation("HeadPhysiotherapist");

                    b.Navigation("Patient");

                    b.Navigation("Session");
                });

            modelBuilder.Entity("AvansFysioAppDomain.Domain.PatientFile", b =>
                {
                    b.HasOne("AvansFysioAppDomain.Domain.Physiotherapist", "HeadPractitioner")
                        .WithMany()
                        .HasForeignKey("HeadPractitionerId");

                    b.HasOne("AvansFysioAppDomain.Domain.Physiotherapist", "IntakeBy")
                        .WithMany()
                        .HasForeignKey("IntakeById");

                    b.HasOne("AvansFysioAppDomain.Domain.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId");

                    b.HasOne("AvansFysioAppDomain.Domain.Physiotherapist", "SupervisionBy")
                        .WithMany()
                        .HasForeignKey("SupervisionById");

                    b.HasOne("AvansFysioAppDomain.Domain.TreatmentPlan", "TreatmentPlan")
                        .WithMany()
                        .HasForeignKey("TreatmentPlanId");

                    b.Navigation("HeadPractitioner");

                    b.Navigation("IntakeBy");

                    b.Navigation("Patient");

                    b.Navigation("SupervisionBy");

                    b.Navigation("TreatmentPlan");
                });

            modelBuilder.Entity("AvansFysioAppDomain.Domain.Session", b =>
                {
                    b.HasOne("AvansFysioAppDomain.Domain.Physiotherapist", "HeadPhysiotherapist")
                        .WithMany()
                        .HasForeignKey("HeadPhysiotherapistId");

                    b.HasOne("AvansFysioAppDomain.Domain.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId");

                    b.HasOne("AvansFysioAppDomain.Domain.TreatmentPlan", null)
                        .WithMany("AllSession")
                        .HasForeignKey("TreatmentPlanId");

                    b.Navigation("HeadPhysiotherapist");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("AvansFysioAppDomain.Domain.Treatment", b =>
                {
                    b.HasOne("AvansFysioAppDomain.Domain.PatientFile", "PatientFile")
                        .WithMany("Treatments")
                        .HasForeignKey("PatientFileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AvansFysioAppDomain.Domain.Physiotherapist", "Physiotherapist")
                        .WithMany()
                        .HasForeignKey("PhysiotherapistId");

                    b.HasOne("AvansFysioAppDomain.Domain.Operation", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");

                    b.Navigation("PatientFile");

                    b.Navigation("Physiotherapist");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("AvansFysioAppDomain.Domain.PatientFile", b =>
                {
                    b.Navigation("Treatments");
                });

            modelBuilder.Entity("AvansFysioAppDomain.Domain.TreatmentPlan", b =>
                {
                    b.Navigation("AllSession");
                });
#pragma warning restore 612, 618
        }
    }
}
